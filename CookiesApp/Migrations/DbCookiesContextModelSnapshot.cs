// <auto-generated />
using System;
using CookiesApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookiesApp.Migrations
{
    [DbContext(typeof(DbCookiesContext))]
    partial class DbCookiesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CookiesApp.Models.LoginLog", b =>
                {
                    b.Property<int>("LogId")
                        .HasColumnType("int");

                    b.Property<bool?>("LoginSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("PK__LoginLog__5E5486485D30EA6A");

                    b.HasIndex("UserId");

                    b.ToTable("LoginLog", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbAdminActivityLog", b =>
                {
                    b.Property<int>("LogId")
                        .HasColumnType("int");

                    b.Property<string>("ActivityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActivityTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("PK__TbAdminA__5E548648FF547811");

                    b.HasIndex("AdminId");

                    b.ToTable("TbAdminActivityLog", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbAdminUser", b =>
                {
                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdminId")
                        .HasName("PK__TbAdminU__719FE488FB4FD3A8");

                    b.HasIndex(new[] { "Username" }, "UQ__TbAdminU__536C85E43E672C2C")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__TbAdminU__A9D1053450108332")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("TbAdminUsers");
                });

            modelBuilder.Entity("CookiesApp.Models.TbAnswer", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerTypeId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId")
                        .HasName("PK__TbAnswer__D48250042B93150B");

                    b.HasIndex("AnswerTypeId");

                    b.ToTable("TbAnswer", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbAnswerType", b =>
                {
                    b.Property<int>("AnswerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerTypeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AnswerTypeId")
                        .HasName("PK__TbAnswer__4D81A36710B6DA3B");

                    b.ToTable("TbAnswerType", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId")
                        .HasName("PK__TbCatego__19093A0BE7876AA1");

                    b.ToTable("TbCategory", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbCommon", b =>
                {
                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("FormId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasIndex("AnswerId");

                    b.HasIndex("AnswerTypeId");

                    b.HasIndex("FormId");

                    b.HasIndex("QuestionId");

                    b.ToTable("TbCommon", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbForm", b =>
                {
                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FormDate")
                        .HasColumnType("date");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FormId")
                        .HasName("PK__TbForm__FB05B7DDD0EE7B3B");

                    b.HasIndex("AdminId");

                    b.HasIndex("AnswerId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("TbForm", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId")
                        .HasName("PK__TbQuesti__0DC06FACB3D68F7A");

                    b.HasIndex("CategoryId");

                    b.ToTable("TbQuestion", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbRegistrationLog", b =>
                {
                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<bool?>("RegistrationSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegistrationTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationId")
                        .HasName("PK__TbRegist__6EF588101A05D753");

                    b.HasIndex("UserId");

                    b.ToTable("TbRegistrationLog", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.TbResult", b =>
                {
                    b.Property<int>("ResultId")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int?>("FormId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResultDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ResultId")
                        .HasName("PK__TbResult__97690208B8A7C5B2");

                    b.HasIndex("AnswerId");

                    b.HasIndex("FormId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("TbResults");
                });

            modelBuilder.Entity("CookiesApp.Models.TbUserAuthentication", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varbinary(64)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__TbUserAu__1788CC4CE2327DE7");

                    b.HasIndex(new[] { "Username" }, "UQ__TbUserAu__536C85E4B8155C71")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ__TbUserAu__A9D10534221BE214")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("TbUserAuthentication", (string)null);
                });

            modelBuilder.Entity("CookiesApp.Models.LoginLog", b =>
                {
                    b.HasOne("CookiesApp.Models.TbUserAuthentication", "User")
                        .WithMany("LoginLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__LoginLog__UserId__3B75D760");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CookiesApp.Models.TbAdminActivityLog", b =>
                {
                    b.HasOne("CookiesApp.Models.TbAdminUser", "Admin")
                        .WithMany("TbAdminActivityLogs")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK__TbAdminAc__Admin__44FF419A");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("CookiesApp.Models.TbAnswer", b =>
                {
                    b.HasOne("CookiesApp.Models.TbAnswerType", "AnswerType")
                        .WithMany("TbAnswers")
                        .HasForeignKey("AnswerTypeId")
                        .HasConstraintName("FK__TbAnswer__Answer__4E88ABD4");

                    b.Navigation("AnswerType");
                });

            modelBuilder.Entity("CookiesApp.Models.TbCommon", b =>
                {
                    b.HasOne("CookiesApp.Models.TbAnswer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .HasConstraintName("FK__TbCommon__Answer__5DCAEF64");

                    b.HasOne("CookiesApp.Models.TbAnswerType", "AnswerType")
                        .WithMany()
                        .HasForeignKey("AnswerTypeId")
                        .HasConstraintName("FK__TbCommon__Answer__5EBF139D");

                    b.HasOne("CookiesApp.Models.TbForm", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK__TbCommon__FormId__5CD6CB2B");

                    b.HasOne("CookiesApp.Models.TbQuestion", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__TbCommon__Questi__5FB337D6");

                    b.Navigation("Answer");

                    b.Navigation("AnswerType");

                    b.Navigation("Form");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CookiesApp.Models.TbForm", b =>
                {
                    b.HasOne("CookiesApp.Models.TbAdminUser", "Admin")
                        .WithMany("TbForms")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK__TbForm__AdminId__5441852A");

                    b.HasOne("CookiesApp.Models.TbAnswer", "Answer")
                        .WithMany("TbForms")
                        .HasForeignKey("AnswerId")
                        .HasConstraintName("FK__TbForm__AnswerId__534D60F1");

                    b.HasOne("CookiesApp.Models.TbCategory", "Category")
                        .WithMany("TbForms")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__TbForm__Category__5165187F");

                    b.HasOne("CookiesApp.Models.TbQuestion", "Question")
                        .WithMany("TbForms")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__TbForm__Question__52593CB8");

                    b.HasOne("CookiesApp.Models.TbUserAuthentication", "User")
                        .WithMany("TbForms")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TbForm__UserId__5535A963");

                    b.Navigation("Admin");

                    b.Navigation("Answer");

                    b.Navigation("Category");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CookiesApp.Models.TbQuestion", b =>
                {
                    b.HasOne("CookiesApp.Models.TbCategory", "Category")
                        .WithMany("TbQuestions")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__TbQuestio__Categ__49C3F6B7");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CookiesApp.Models.TbRegistrationLog", b =>
                {
                    b.HasOne("CookiesApp.Models.TbUserAuthentication", "User")
                        .WithMany("TbRegistrationLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TbRegistr__UserI__3E52440B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CookiesApp.Models.TbResult", b =>
                {
                    b.HasOne("CookiesApp.Models.TbAnswer", "Answer")
                        .WithMany("TbResults")
                        .HasForeignKey("AnswerId")
                        .HasConstraintName("FK__TbResults__Answe__5AEE82B9");

                    b.HasOne("CookiesApp.Models.TbForm", "Form")
                        .WithMany("TbResults")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK__TbResults__FormI__5812160E");

                    b.HasOne("CookiesApp.Models.TbQuestion", "Question")
                        .WithMany("TbResults")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__TbResults__Quest__59FA5E80");

                    b.HasOne("CookiesApp.Models.TbUserAuthentication", "User")
                        .WithMany("TbResults")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__TbResults__UserI__59063A47");

                    b.Navigation("Answer");

                    b.Navigation("Form");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CookiesApp.Models.TbAdminUser", b =>
                {
                    b.Navigation("TbAdminActivityLogs");

                    b.Navigation("TbForms");
                });

            modelBuilder.Entity("CookiesApp.Models.TbAnswer", b =>
                {
                    b.Navigation("TbForms");

                    b.Navigation("TbResults");
                });

            modelBuilder.Entity("CookiesApp.Models.TbAnswerType", b =>
                {
                    b.Navigation("TbAnswers");
                });

            modelBuilder.Entity("CookiesApp.Models.TbCategory", b =>
                {
                    b.Navigation("TbForms");

                    b.Navigation("TbQuestions");
                });

            modelBuilder.Entity("CookiesApp.Models.TbForm", b =>
                {
                    b.Navigation("TbResults");
                });

            modelBuilder.Entity("CookiesApp.Models.TbQuestion", b =>
                {
                    b.Navigation("TbForms");

                    b.Navigation("TbResults");
                });

            modelBuilder.Entity("CookiesApp.Models.TbUserAuthentication", b =>
                {
                    b.Navigation("LoginLogs");

                    b.Navigation("TbForms");

                    b.Navigation("TbRegistrationLogs");

                    b.Navigation("TbResults");
                });
#pragma warning restore 612, 618
        }
    }
}
